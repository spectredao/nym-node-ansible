---
- name: Create nym directory
  file:
    path: "/root/nym-binaries"
    state: directory
    mode: "0755"

- name: Download nym-node binary
  get_url:
    url: "{{ binary_url }}"
    dest: "/root/nym-binaries/nym-node"
    mode: "0755"

- name: Download nym-cli binary
  get_url:
    url: "{{ cli_url }}"
    dest: "/root/nym-binaries/nym-cli"
    mode: "0755"

- name: Copy tunnel manager script
  copy:
    src: files/network_tunnel_manager.sh
    dest: "/root/nym-binaries/network_tunnel_manager.sh"
    mode: "0755"

- name: Template systemd service
  tags: systemctl
  template:
    src: nym-node.service.j2
    dest: /etc/systemd/system/nym-node.service

# Useful when the host is behind a NAT
- name: Fetch the public IP address
  command: "curl -4 canhazip.com"
  register: ipv4
  changed_when: false

- name: Show IP address
  debug:
    msg: "{{ ipv4.stdout }}"

- name: Set public IP address based on curl result
  set_fact:
    public_ip: "{{ ipv4.stdout if ipv4.rc == 0 else ansible_default_ipv4.address }}"

- name: Initialize nym node
  command:
    cmd: "/root/nym-binaries/nym-node run --mode exit-gateway --public-ips {{ public_ip }} --hostname {{ hostname }} --http-bind-address 0.0.0.0:8080 --mixnet-bind-address 0.0.0.0:1789 --location {{ location }} --accept-operator-terms-and-conditions --wireguard-enabled true --landing-page-assets-path /var/www/{{ hostname }}/ -w  --init-only"

- name: Configure tunnel manager
  become: true
  command:
    cmd: "/root/nym-binaries/network_tunnel_manager.sh {{ item }}"
  loop:
    - apply_iptables_rules
    - check_nymtun_iptables
    - apply_iptables_rules_wg
    - configure_dns_and_icmp_wg
    # - joke_through_the_mixnet
    # - joke_through_wg_tunnel

- name: Update nym description
  template:
    src: description.toml.j2
    dest: /root/.nym/nym-nodes/default-nym-node/data/description.toml

- name: Enable and start nym service
  tags: systemctl
  systemd:
    name: nym-node
    enabled: yes
    state: started
    daemon_reload: yes
